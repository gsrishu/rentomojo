{"version":3,"sources":["Comp/LinkItem.js","Comp/Header.js","image/1.jpg","Comp/Home.js","Comp/User.js","Comp/Comment.js","Comp/Post.js","Comp/DeletePost.js","App.js","reportWebVitals.js","index.js"],"names":["LinkItem","props","pageURI","window","location","pathname","search","liClassName","path","className","to","name","Header","style","borderBottom","marginBottom","href","fontWeight","alignContent","paddingTop","src","alt","display","Home","state","items","isLoaded","color","fetch","then","res","json","setState","this","map","item","id","logo","icon","faUser","paddingBottom","paddingLeft","faBuilding","company","Component","User","userName","match","params","userId","post","padding","title","Comment","postId","float","email","body","Post","showComment","e","prevState","deletePost","username","method","DeletePost","detail","commentInfo","onClick","aria-hidden","App","backgroundColor","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eac1c941.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nexport const LinkItem = (props) => {\r\n    const pageURI = window.location.pathname+window.location.search\r\n    const liClassName = (props.path === pageURI) ? \"nav-item active\" : \"nav-item\";\r\n    return (\r\n      <li className={liClassName}>\r\n        <Link to={props.path} className=\"nav-link\">\r\n          {props.name}\r\n          {(props.path === pageURI) ? (<span className=\"sr-only\">(current)</span>) : ''}\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n","import React from 'react'\r\nimport {LinkItem} from './LinkItem'\r\n\r\n\r\nexport const Header = (props) =>{      \r\n        return (\r\n            <nav style={{borderBottom: '0.2px solid grey', marginBottom: '2em'}} className='navbar navbar-expand-lg navbar-light nav-btm'>\r\n                <a href='/' className='navbar-brand' style={{fontWeight: 500, alignContent: 'center', paddingTop: '15px'}}>\r\n                    <img src=\"https://www.rentomojo.com/public/images/logo.svg\" alt=\"RentoMojo\"/>\r\n                </a>\r\n                <div className=\"collapse navbar-collapse\" style={{display: 'flex !important'}}>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                      <li>  \r\n                      <LinkItem path='/' name='Home' />                          \r\n                      </li>\r\n                    \r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );  \r\n        \r\n   \r\n    }\r\n    ","export default __webpack_public_path__ + \"static/media/1.ceeb6c74.jpg\";","import React, {Component} from 'react'\r\nimport './Home.css';\r\nimport {Header} from './Header';\r\nimport { Link, BrowserRouter as Router } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser,faBuilding} from '@fortawesome/free-solid-svg-icons'\r\nimport logo from '../image/1.jpg';\r\n\r\n/*/*/\r\nclass Home extends Component{\r\n\r\n   constructor(props){\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n        items:[],\r\n        isLoaded:false,\r\n        color: ''\r\n    }\r\n   }\r\n\r\n   componentDidMount(){\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n     .then(res => res.json())\r\n     .then(json  =>{\r\n\r\n        this.setState({\r\n\r\n            isLoaded: true,\r\n            items: json,\r\n        })\r\n     })\r\n   }\r\n    render(){\r\n\r\n        var {isLoaded, items} = this.state;\r\n        var c;\r\n\r\n        if(!isLoaded){\r\n            return <div> Loading...</div>\r\n         }\r\n        else{\r\n            // const logo = require('../image/1.jpg');\r\n        return(\r\n            \r\n            <div className=\"Home\">\r\n                <Header/>\r\n                <div className='container-fluid'>\r\n                    <div className='col-12 col-sm-10 mx-auto'>\r\n                        <div className='row justify-content-between'>\r\n                   {items.map(item => (       \r\n                   <div key={item.id} className=\"col-md-5 col-lg-4 col-12 card-container\">\r\n                <div className=\"card\">\r\n                    <Link to={`/user/${item.id}/${item.name}`}>\r\n                        <div className=\"card--display\">\r\n                        {/* {color = randomColor()} */}\r\n                        {/* <div className=\"cardBackground\" style={{backgroundColor:'#da979e'}}  /> */}\r\n                        <img src={logo}  className=\"cardBackground\"/>\r\n                        <div className=\"userStyle\">\r\n                        <FontAwesomeIcon icon={faUser}/> <h6 style={{ paddingBottom: '10px',display: 'inline',paddingLeft: '10px' }}>{item.name}</h6><br/>\r\n                        <FontAwesomeIcon icon={faBuilding} /><h6 style={{ paddingBottom: '10px',display: 'inline',paddingLeft: '10px' }}>{item.company.name}</h6>\r\n                        </div>\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"card--border\"></div>\r\n                </div>\r\n                </div>\r\n                ))};\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    \r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default Home;","import React , {Component}from 'react';\r\nimport {Header} from './Header';\r\nimport { Link } from 'react-router-dom';\r\nimport './Post.css';\r\n\r\nclass User extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: this.props.match.params.userName,\r\n            items: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        fetch(`https://jsonplaceholder.typicode.com/posts?userId=${this.props.match.params.userId}&skip=0&limit=10`)\r\n         .then(res => res.json())\r\n         .then(json  =>{\r\n    \r\n            this.setState({\r\n    \r\n                isLoaded: true,\r\n                items: json,\r\n            })\r\n         })\r\n       }\r\n\r\n    render(){\r\n      \r\n        var {isLoaded, items} = this.state;\r\n\r\n        if(!isLoaded){\r\n            return <div> Loading...</div>\r\n         }\r\n        else{\r\n            \r\n            return( \r\n                <div className=\"user\">\r\n                <Header/>\r\n                <div className='container-fluid'>\r\n                <div className='author'>\r\n                        <p>{this.props.match.params.userName}</p>\r\n                    </div>\r\n                    <div className='col-12 col-sm-10 mx-auto'>\r\n                        <div className='row justify-content-between'>\r\n               {items.map(post => (  \r\n                   <div key={post.id} className=\"col-md-5 col-lg-4 col-12 card-container\"> \r\n                    <div className=\"card\">\r\n                    <div className=\"card--display\" >\r\n                    <Link to={`/post/${post.id}/${post.userId}`} style={{padding: '10px'}}>{post.title}</Link>\r\n                    </div>\r\n                    <div className=\"card--border\"></div>\r\n                    </div>\r\n                </div>\r\n            ))};\r\n            </div></div></div>\r\n             </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\nexport default User;\r\n","import React, {Component} from 'react';\r\nimport './Comment.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser,faBuilding} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Comment extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n    \r\n            items:[],\r\n            isLoaded:false,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        fetch(`https://jsonplaceholder.typicode.com/comments?postId=${this.props.postId}`)\r\n         .then(res => res.json())\r\n         .then(json  =>{\r\n    \r\n            this.setState({\r\n    \r\n                isLoaded: true,\r\n                items: json,\r\n            })\r\n         })\r\n       }\r\n\r\n    render(){\r\n        \r\n        var {isLoaded, items} = this.state;\r\n\r\n        if(!isLoaded){\r\n            return <div> Loading...</div>\r\n         }\r\n        else{\r\n        return(\r\n           <div>\r\n               <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-1\">\r\n                </div>\r\n                <div className=\"col-md-10\"style={{padding: '10px'}}>\r\n                  <div className=\"page-header\">\r\n                    {/* <h1><small className=\"pull-right\">45 comments</small> Comments </h1> */}\r\n                  </div> \r\n\r\n                  {items.map(item => (   \r\n                    // <ul className='comment-section' key={item.id}>\r\n                    // <li>{item.name}</li>\r\n                    // <li>{item.email}</li>\r\n                    // <li>{item.body}</li>\r\n                    // </ul>\r\n                       <div className=\"comments-list\" key={item.id} style={{padding: '20px'}}>\r\n                       <div className=\"media\">\r\n                            <a className=\"media-left\" style={{padding: '20px'}}>\r\n                            <FontAwesomeIcon icon={faUser}/>\r\n                            </a>\r\n                            <div className=\"media-body\">\r\n                                \r\n                              <h4 className=\"media-heading user_name\">{item.name} <span style={{float: 'right'}}>{item.email}</span></h4>\r\n                              {item.body}\r\n                            </div>\r\n                          </div>\r\n                      \r\n                 \r\n                    \r\n                   </div>\r\n                   ))};\r\n                \r\n                    \r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n             \r\n               \r\n           </div>\r\n        );\r\n     }\r\n    }\r\n}\r\n\r\nexport default Comment;","import React, {Component} from 'react'\r\nimport {Header} from './Header';\r\nimport Comments from './Comment'\r\nimport {DeletePost} from './DeletePost'\r\nclass Post extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n    \r\n        this.state = {\r\n    \r\n            items:[],\r\n            isLoaded:false,\r\n            showComment:false,\r\n            postId:this.props.match.params.postId,\r\n            userId:this.props.match.params.userId\r\n        }\r\n       }\r\n       componentDidMount(){\r\n\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.props.match.params.postId}`)\r\n         .then(res => res.json())\r\n         .then(json  =>{\r\n    \r\n            this.setState({\r\n    \r\n                isLoaded: true,\r\n                items: json,\r\n            })\r\n         })\r\n       }\r\n       showComment = (e) => {\r\n        this.setState(prevState => ({\r\n            showComment: !prevState.showComment\r\n        }))\r\n    }\r\n    \r\n    deletePost = () => {\r\n        DeletePost(this.state.postId, this.state.userId)\r\n    }\r\n\r\n    render(){\r\n\r\n        var title,detail;\r\n\r\n        title = this.state.items.title;\r\n        detail = this.state.items.body;\r\n        // this.state.items.map(item => {\r\n        //     title = item.title\r\n        //     detail = item.body\r\n\r\n        // });\r\n        const commentInfo = this.state.showComment ? 'Hide Comments' : 'Show Comments';\r\n        return(\r\n            \r\n            <div>\r\n                \r\n            <Header />\r\n            <div className='container-fluid'>\r\n                <div>\r\n                <div className='header'>\r\n                    <h4 style={{display: 'inline'}}>Title: </h4><h5 className='title' style={{display: 'inline'}}>{title}</h5>\r\n                    <button onClick={this.deletePost} className='btn btn-outline-danger btn-sm btn-delete' style={{float: 'right'}}><i className=\"fa fa-trash my-auto\" aria-hidden=\"true\"></i>Delete</button>\r\n                </div>\r\n                <div className='content'style={{paddingTop: '10px'}}><h4>Content: </h4><h6>{detail}</h6></div>\r\n                </div>\r\n                <div className='comments' style={{padding: '10px'}}>\r\n                    <h6 style={{display: 'inline'}}>Comments:</h6>\r\n                    <button onClick={this.showComment} className='btn btn-outline-primary btn-sm'style={{float: 'right'}}>{commentInfo}</button>\r\n                </div>\r\n                {this.state.showComment?<Comments postId={this.state.postId} />:null}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post","\r\n\r\nexport function DeletePost(postId, userId) {\r\n    let userName;\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${userId}`)\r\n    .then(res => res.json())\r\n    .then(json  =>{\r\n       userName = json.username;\r\n       fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, { method: 'DELETE' })\r\n    .then(window.location.href = `/user/${userId}/${userName}`)\r\n     //  console.log(userName);\r\n       \r\n    });\r\n    // console.log(userName);\r\n   \r\n    \r\n}","\nimport React, {Component} from 'react';\n\nimport Home from './Comp/Home';\nimport User from './Comp/User'\nimport Post from './Comp/Post';\nimport { Switch,Route, BrowserRouter as Router } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component{\n\n\n  render(){\n    return (\n\n      <div className=\"App\" style={{backgroundColor: '#f8fafaf2'}}>\n         \n\n          <Router>                   \n            <Switch>\n                        <Route exact path='/' component={Home} />\n                        <Route exact path='/user/:userId/:userName' component={(props) => <User {...props} />}  />\n                        <Route exact path='/post/:postId/:userId' component={(props) => <Post {...props}/>} />\n\n                    </Switch>\n            </Router> \n\n            \n      </div>\n    )\n  }\n}\n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconst app = (\n  <BrowserRouter>\n    \t<App />\n\t</BrowserRouter>\n);\nReactDOM.render(app,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}